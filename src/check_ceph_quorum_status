#!/usr/bin/env python

import argparse
import os
import subprocess
import sys
import json

# default ceph values
CEPH_COMMAND = '/usr/bin/ceph'

# nagios exit code
STATUS_OK = 0
STATUS_WARNING = 1
STATUS_ERROR = 2
STATUS_UNKNOWN = 3

def main():

    # parse args
    parser = argparse.ArgumentParser(description="'ceph quorum_status' nagios plugin.")
    parser.add_argument('-e','--exe', help='ceph executable [%s]' % CEPH_COMMAND)
    parser.add_argument('-c','--conf', help='alternative ceph conf file')
    parser.add_argument('-V','--version', help='show version and exit', action='store_true')
    args = parser.parse_args()

    # validate args
    ceph_exec = args.exe if args.exe else CEPH_COMMAND
    if not os.path.exists(ceph_exec):
        print "ERROR: ceph executable '%s' doesn't exist" % ceph_exec
        return STATUS_UNKNOWN

    if args.version:
        print 'version %s' % __version__
        return STATUS_OK

    if args.conf and not os.path.exists(args.conf):
        print "ERROR: ceph conf file '%s' doesn't exist" % args.conf
        return STATUS_UNKNOWN

    # build command
    ceph_quorum_status = [ceph_exec]
    if args.conf:
        ceph_quorum_status.append('-c')
        ceph_quorum_status.append(args.conf)
    ceph_quorum_status.append('quorum_status')
    ceph_quorum_status.append('-f')
    ceph_quorum_status.append('json-pretty')

    ceph_quorum_status.insert(0, "sudo")

    #print ceph_quorum_status

    # exec command
    p = subprocess.Popen(ceph_quorum_status,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
    output, err = p.communicate()
    parsed_output = json.loads(output)
    print parsed_output

    return STATUS_UNKNOWN


if __name__ == "__main__":
    sys.exit(main())
